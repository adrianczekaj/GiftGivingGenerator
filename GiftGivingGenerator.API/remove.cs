// // <auto-generated />
// using System;
// using GiftGivingGenerator.API;
// using Microsoft.EntityFrameworkCore;
// using Microsoft.EntityFrameworkCore.Infrastructure;
// using Microsoft.EntityFrameworkCore.Metadata;
// using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
//
// #nullable disable
//
// namespace GiftGivingGenerator.API.Migrations
// {
//     [DbContext(typeof(AppContext))]
//     partial class AppContextModelSnapshot : ModelSnapshot
//     {
//         protected override void BuildModel(ModelBuilder modelBuilder)
//         {
// #pragma warning disable 612, 618
//             modelBuilder
//                 .HasAnnotation("ProductVersion", "6.0.0")
//                 .HasAnnotation("Relational:MaxIdentifierLength", 128);
//
//             SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);
//
//             modelBuilder.Entity("EventPerson", b =>
//                 {
//                     b.Property<Guid>("EventId")
//                         .HasColumnType("uniqueidentifier");
//
//                     b.Property<Guid>("PersonId")
//                         .HasColumnType("uniqueidentifier");
//
//                     b.HasKey("EventId", "PersonId");
//
//                     b.HasIndex("PersonId");
//
//                     b.ToTable("EventPerson");
//                 });
//
//             modelBuilder.Entity("GiftGivingGenerator.API.Entities.DrawingResult", b =>
//                 {
//                     b.Property<Guid>("Id")
//                         .ValueGeneratedOnAdd()
//                         .HasColumnType("uniqueidentifier");
//
//                     b.Property<Guid>("EventId")
//                         .HasColumnType("uniqueidentifier");
//
//                     b.Property<Guid>("GiverPersonId")
//                         .HasColumnType("uniqueidentifier");
//
//                     b.Property<Guid>("RecipientPersonId")
//                         .HasColumnType("uniqueidentifier");
//
//                     b.HasKey("Id");
//
//                     b.HasIndex("EventId");
//
//                     b.ToTable("DrawingResults");
//                 });
//
//             modelBuilder.Entity("GiftGivingGenerator.API.Entities.Event", b =>
//                 {
//                     b.Property<Guid>("Id")
//                         .ValueGeneratedOnAdd()
//                         .HasColumnType("uniqueidentifier");
//
//                     b.Property<DateTime>("CreatingDate")
//                         .HasColumnType("datetime2");
//
//                     b.Property<DateTime>("EndDate")
//                         .HasColumnType("datetime2");
//
//                     b.Property<string>("Name")
//                         .IsRequired()
//                         .HasColumnType("nvarchar(max)");
//
//                     b.HasKey("Id");
//
//                     b.ToTable("Events");
//                 });
//
//             modelBuilder.Entity("GiftGivingGenerator.API.Entities.Person", b =>
//                 {
//                     b.Property<Guid>("Id")
//                         .ValueGeneratedOnAdd()
//                         .HasColumnType("uniqueidentifier");
//
//                     b.Property<string>("Name")
//                         .IsRequired()
//                         .HasColumnType("nvarchar(max)");
//
//                     b.HasKey("Id");
//
//                     b.ToTable("Persons");
//                 });
//
//             modelBuilder.Entity("EventPerson", b =>
//                 {
//                     b.HasOne("GiftGivingGenerator.API.Entities.Event", null)
//                         .WithMany()
//                         .HasForeignKey("EventId")
//                         .OnDelete(DeleteBehavior.Cascade)
//                         .IsRequired();
//
//                     b.HasOne("GiftGivingGenerator.API.Entities.Person", null)
//                         .WithMany()
//                         .HasForeignKey("PersonId")
//                         .OnDelete(DeleteBehavior.Cascade)
//                         .IsRequired();
//                 });
//
//             modelBuilder.Entity("GiftGivingGenerator.API.Entities.DrawingResult", b =>
//                 {
//                     b.HasOne("GiftGivingGenerator.API.Entities.Event", "Event")
//                         .WithMany()
//                         .HasForeignKey("EventId")
//                         .OnDelete(DeleteBehavior.Cascade)
//                         .IsRequired();
//
//                     b.Navigation("Event");
//                 });
// #pragma warning restore 612, 618
//         }
//     }
// }
